{# filepath: c:\Users\Dev404\Documents\admin-dashboard\templates\sportproduct\index.html.twig #}
{% extends 'base.html.twig' %}

{% block stylesheets %}
	{{ parent() }}
	<link rel="stylesheet" href="{{ asset('css/sportproduct.css') }}">
	<style>
		.btn-loupe {
			display: inline-flex;
			align-items: center;
			justify-content: center;
			width: 38px;
			height: 38px;
			border-radius: 50%;
			background: #1976d2;
			border: none;
			padding: 0;
			cursor: pointer;
			transition: background 0.2s;
			box-shadow: 0 2px 6px rgba(25, 118, 210, 0.08);
		}
		.btn-loupe:hover {
			background: #1251a3;
		}
		.btn-loupe img,
		.btn-loupe svg {
			width: 20px;
			height: 20px;
			display: block;
		}
		.btn-edit {
			display: inline-flex;
			align-items: center;
			justify-content: center;
			width: 38px;
			height: 38px;
			border-radius: 50%;
			background: #ff9800;
			border: none;
			padding: 0;
			cursor: pointer;
			transition: background 0.2s;
			box-shadow: 0 2px 6px rgba(255, 152, 0, 0.08);
			margin-left: 6px;
		}
		.btn-edit:hover {
			background: #e65100;
		}
		.btn-edit svg {
			width: 20px;
			height: 20px;
			display: block;
		}
		.btn-supprimer {
			display: inline-flex;
			align-items: center;
			justify-content: center;
			width: 38px;
			height: 38px;
			border-radius: 50%;
			background: #e53935;
			border: none;
			padding: 0;
			cursor: pointer;
			transition: background 0.2s;
			box-shadow: 0 2px 6px rgba(229, 57, 53, 0.08);
			margin-left: 6px;
		}
		.btn-supprimer:hover {
			background: #b71c1c;
		}
		.btn-supprimer svg {
			width: 20px;
			height: 20px;
			display: block;
		}
		.sportproduct-actions {
			display: flex;
			flex-direction: row;
			align-items: center;
			justify-content: center;
			gap: 6px;
		}
	</style>
{% endblock %}

{% block body %}
	<aside class="admin-sidebar">
		<div class="sidebar-title">Admin</div>
		<nav>
			<a href="{{ path('admin') }}">
				<i class="fas fa-tachometer-alt"></i>
				Dashboard</a>
			{# <a href="{{ path('admin') }}"><i class="fas fa-running"></i> Sports</a> #}
			<a href="{{ path('sportproduct_index') }}" class="active">
				<i class="fas fa-link"></i>
				Tenues de sport</a>
			{# Ajoute d'autres liens si besoin #}
			<a href="{{ path('categoryproduct_index') }}">
				<i class="fas fa-tags"></i>
				Goodies</a>
		</nav>
	</aside>
	<main class="admin-main-content">
		<h1>
			<span class="title-text">Tenues de sport</span>
			<span class="title-sub">(LIAISONS SPORT/PRODUIT)</span>
		</h1>
		<div class="add-product-btn-wrapper">
			<button id="toggle-form-btn" class="btn-modifier">Ajouter un produit</button>
		</div>
		<form id="sportproduct-form" method="post" action="{{ path('sportproduct_add') }}" enctype="multipart/form-data" class="sportproduct-form" style="display:none;">
			<div>
				<label>ID Sport :
					<select name="id_sport" required>
						<option value="">-- Sélectionner un sport --</option>
						{% for sport in sports %}
							<option value="{{ sport.idSport }}">
								{{ sport.idSport }}
								-
								{{ sport.name }}
							</option>
						{% endfor %}
					</select>
				</label>
				<label>ID Produit :
					<input type="number" name="id_product" id="id_product_input" required>
					<span id="id_product_error" style="color:red;display:none;">Cet ID Produit existe déjà !</span>
				</label>
				<label>Nom :
					<input type="text" name="name" required>
				</label>


				<label>Image du carrousel :
					<input type="file" name="carousel_image" accept="image/*" required>
				</label>


				<label>Type :
					<input type="number" name="type" required placeholder="1 pour tenue de sport, 2 pour produit goodies.">
				</label>
			</div>
			<div>
				<label>Col :
					<select name="has_collar" required>
						<option value="" selected disabled>-- Avec col / Sans col --</option>
						<option value="1">Avec col </option>
						<option value="0">Sans col</option>
					</select>
				</label>
				<label>Numéro :
					<select name="has_number" required>
						<option value="" selected disabled>-- Avec numéro / Sans numéro --</option>
						<option value="1">Avec numéro </option>
						<option value="0">Sans numéro</option>
					</select>
				</label>
				<label>Images :
					<select name="has_pictures" required>
						<option value="" selected disabled>-- Avec images / Sans images --</option>
						<option value="1">Avec images </option>
						<option value="0">Sans images</option>
					</select>
				</label>
				<label>Texte :
					<select name="has_text" required>
						<option value="" selected disabled>-- Avec texte / Sans texte --</option>
						<option value="1">Avec texte </option>
						<option value="0">Sans texte</option>
					</select>
				</label>
				<label>Nombre de couleurs :
					<input type="number" name="color_number" required placeholder="Nombre de couleurs (1 à 5)">
				</label>
			</div>
			<div>
				<label>Couleur par défaut 1 :
					<select name="default_color_1" required>
						<option value="0" selected>-- Aucun --</option>
						{% for color in colors %}
							<option value="{{ color.idColor }}">{{ color.idColor }}
								-
								{{ color.colorName }}</option>
						{% endfor %}
					</select>
				</label>
				<label>Couleur par défaut 2 :
					<select name="default_color_2" required>
						<option value="0" selected>-- Aucun --</option>
						{% for color in colors %}
							<option value="{{ color.idColor }}">{{ color.idColor }}
								-
								{{ color.colorName }}</option>
						{% endfor %}
					</select>
				</label>
				<label>Couleur par défaut 3 :
					<select name="default_color_3" required>
						<option value="0" selected>-- Aucun --</option>
						{% for color in colors %}
							<option value="{{ color.idColor }}">{{ color.idColor }}
								-
								{{ color.colorName }}</option>
						{% endfor %}
					</select>
				</label>
				<label>Couleur par défaut 4 :
					<select name="default_color_4" required>
						<option value="0" selected>-- Aucun --</option>
						{% for color in colors %}
							<option value="{{ color.idColor }}">{{ color.idColor }}
								-
								{{ color.colorName }}</option>
						{% endfor %}
					</select>
				</label>
				<label>Couleur par défaut 5 :
					<select name="default_color_5" required>
						<option value="0" selected>-- Aucun --</option>
						{% for color in colors %}
							<option value="{{ color.idColor }}">{{ color.idColor }}
								-
								{{ color.colorName }}</option>
						{% endfor %}
					</select>
				</label>
			</div>


			<div>
				<label>
					Produit avec plusieurs cols ?
					<input type="checkbox" name="has_multiple_collars" id="has_multiple_collars">
				</label>
			</div>

			<div id="collar-images-wrapper">
				<div id="images-main-inputs">
					<label>Images du produit (si un seul col) :
						<input type="file" name="images[]" onchange="previewImages(this, 'preview-images-main')">
					</label>
				</div>
				<button type="button" id="add-image-main-btn" onclick="addImageInput('images-main-inputs', 'images[]', 'preview-images-main')">Ajouter une image</button>
				<div id="preview-images-main" class="preview-images"></div>
			</div>


			<button type="submit">Ajouter</button>
		</form>


		<script>
			document.getElementById('has_multiple_collars').addEventListener('change', function () {
const wrapper = document.getElementById('collar-images-wrapper');
wrapper.innerHTML = '';

if (this.checked) {
for (let i = 1; i <= 4; i++) {
const inputsDiv = document.createElement('div');
inputsDiv.id = `images-col${i}-inputs`;

const label = document.createElement('label');
label.innerHTML = `Images pour col ${i} : <input type="file" name="images_col_${i}[]" onchange="previewImages(this, 'preview-images-col${i}')">`;
inputsDiv.appendChild(label);

const addBtn = document.createElement('button');
addBtn.type = 'button';
addBtn.textContent = 'Ajouter une image';
addBtn.onclick = function () {
addImageInput (`images-col${i}-inputs`, `images_col_${i}[]`, `preview-images-col${i}`);
};
inputsDiv.appendChild(addBtn);

const previewDiv = document.createElement('div');
previewDiv.id = `preview-images-col${i}`;
previewDiv.className = 'preview-images';
inputsDiv.appendChild(previewDiv);

wrapper.appendChild(inputsDiv);
}
} else {
const inputsDiv = document.createElement('div');
inputsDiv.id = 'images-main-inputs';

const label = document.createElement('label');
label.innerHTML = `Images du produit (pas de col) : <input type="file" name="images[]" onchange="previewImages(this, 'preview-images-main')">`;
inputsDiv.appendChild(label);

const addBtn = document.createElement('button');
addBtn.type = 'button';
addBtn.textContent = 'Ajouter une image';
addBtn.onclick = function () {
addImageInput('images-main-inputs', 'images[]', 'preview-images-main');
};
inputsDiv.appendChild(addBtn);

const previewDiv = document.createElement('div');
previewDiv.id = 'preview-images-main';
previewDiv.className = 'preview-images';
inputsDiv.appendChild(previewDiv);

wrapper.appendChild(inputsDiv);
}
});


// Liste des IDs produits déjà utilisés (générée côté serveur)
const usedProductIds = {{ usedProductIds|json_encode|raw }};

document.getElementById('id_product_input').addEventListener('input', function () {
const val = parseInt(this.value, 10);
const error = document.getElementById('id_product_error');
if (usedProductIds.includes(val)) {
error.style.display = 'inline';
} else {
error.style.display = 'none';
}
});

// Empêche la soumission si l'id existe déjà
document.getElementById('sportproduct-form').addEventListener('submit', function (e) {
const val = parseInt(document.getElementById('id_product_input').value, 10);
if (usedProductIds.includes(val)) {
document.getElementById('id_product_error').style.display = 'inline';
e.preventDefault();
}
});


// Ajoute dynamiquement un input file
function addImageInput(wrapperId, inputName, previewId) {
const wrapper = document.getElementById(wrapperId);
const label = document.createElement('label');
label.innerHTML = `<input type="file" name="${inputName}" onchange="previewImages(this, '${previewId}')">`;
wrapper.insertBefore(label, wrapper.querySelector('button'));
}

// Fonction d'aperçu des images
function previewImages(input, previewId) {
const preview = document.getElementById(previewId);
if (! preview) 
return;



// On n'efface pas le preview, on ajoute à la suite
Array.from(input.files).forEach(file => {
const reader = new FileReader();
reader.onload = function (e) {
const img = document.createElement('img');
img.src = e.target.result;
img.style.maxWidth = '80px';
img.style.margin = '5px';
preview.appendChild(img);
};
reader.readAsDataURL(file);
});
}

document.getElementById('toggle-form-btn').addEventListener('click', function () {
const form = document.getElementById('sportproduct-form');
form.style.display = (form.style.display === 'none' || form.style.display === '') ? 'block' : 'none';
});
		</script>


		<br>
		<!-- Barre de recherche -->
		<div class="sportproduct-search-bar">
			<input type="text" id="sportproduct-search-input" placeholder="Rechercher par nom ou ID..." autocomplete="off">
			<button type="button" id="sportproduct-search-btn">
				<i class="fas fa-search"></i>
				Rechercher</button>
		</div>
		<div class="table-responsive">
			<table border="1" cellpadding="5" class="sportproduct-table" id="sportproduct-table">
				<thead>
					<tr>
						<th>ID Sport</th>
						<th>ID Produit</th>
						<th>Image</th>
						<th>Nom</th>
						<th>Type</th>
						<th>Actions</th>
					</tr>
				</thead>
				<tbody>
					{% for sp in sportproducts %}
						{% if sp.product %}
							<tr>
								<td>{{ sp.idSport }}</td>
								<td>{{ sp.idProduct }}</td>
								<td>
									<img src="{{ asset('storage/app/public/pictures/products/' ~ sp.product.getPath() ~ '.png') }}" alt="{{ sp.product.getName() }}">
								</td>
								<td>{{ sp.product.name }}</td>
								<td>{{ sp.product.type }}</td>
								<td>
									<div class="sportproduct-actions">
										<a href="{{ path('sportproduct_show', {id_sport: sp.idSport, id_product: sp.idProduct}) }}" class="btn-loupe" title="Détails">
											<svg width="20" height="20" viewbox="0 0 20 20" fill="none">
												<circle cx="9" cy="9" r="7" stroke="white" stroke-width="2"/>
												<line x1="14.2929" y1="14.7071" x2="18" y2="18.4142" stroke="white" stroke-width="2" stroke-linecap="round"/>
											</svg>
										</a>
										<a href="{{ path('sportproduct_edit', {id_sport: sp.idSport, id_product: sp.idProduct}) }}" class="btn-edit" title="Modifier">
											<svg width="20" height="20" viewbox="0 0 20 20" fill="none">
												<path d="M14.7 3.29a1 1 0 0 1 1.41 0l0.59 0.59a1 1 0 0 1 0 1.41l-9.17 9.17-2.12 0.71 0.71-2.12 9.17-9.17z" fill="white"/>
												<path d="M3 17h14" stroke="white" stroke-width="2" stroke-linecap="round"/>
											</svg>
										</a>
										<form method="post" action="{{ path('sportproduct_delete', {id_sport: sp.idSport, id_product: sp.idProduct}) }}" style="display:inline;">
											<button type="submit" class="btn-supprimer" onclick="return confirm('Supprimer cette liaison ?')" title="Supprimer">
												<svg width="20" height="20" viewbox="0 0 20 20" fill="none">
													<rect x="5" y="7" width="10" height="8" rx="2" stroke="white" stroke-width="2"/>
													<path d="M3 7h14" stroke="white" stroke-width="2" stroke-linecap="round"/>
													<path d="M8 7V5a2 2 0 0 1 4 0v2" stroke="white" stroke-width="2"/>
												</svg>
											</button>
										</form>
									</div>
								</td>
							</tr>
							<tr class="spacer-row">
								<td colspan="6"></td>
							</tr>
						{% endif %}
					{% else %}
						<tr>
							<td colspan="6">Aucune liaison trouvée.</td>
						</tr>
					{% endfor %}
				</tbody>
			</table>
		</div>
	</main>
	<script>
		// Recherche dynamique dans le tableau avec mise en haut du résultat
const originalOrder = [];
document.addEventListener('DOMContentLoaded', function () {
const tbody = document.getElementById('sportproduct-table').querySelector('tbody');
const rows = Array.from(tbody.querySelectorAll('tr')).filter(r => !r.querySelector('td[colspan]'));
rows.forEach(row => originalOrder.push(row.cloneNode(true)));
});

function filterSportproductTable() {
const input = document.getElementById('sportproduct-search-input');
const filter = input.value.trim().toLowerCase();
const table = document.getElementById('sportproduct-table');
const tbody = table.querySelector('tbody');
const allRows = Array.from(tbody.querySelectorAll('tr')).filter(r => !r.querySelector('td[colspan]'));
const spacerRows = Array.from(tbody.querySelectorAll('tr.spacer-row'));
const dataRows = allRows.filter(r => !r.classList.contains('spacer-row'));
let foundRows = [];

// Toujours masquer toutes les lignes au départ
dataRows.forEach(row => {
row.style.display = 'none';
});
spacerRows.forEach(row => {
row.style.display = 'none';
});

// Filtrer et collecter les lignes correspondantes
dataRows.forEach(row => {
const tds = row.querySelectorAll('td');
const idSport = tds[0] ?. textContent.trim().toLowerCase() || '';
const idProduct = tds[1] ?. textContent.trim().toLowerCase() || '';
const name = tds[3] ?. textContent.trim().toLowerCase() || '';
if (filter === '' || idSport.includes(filter) || idProduct.includes(filter) || name.includes(filter)) {
foundRows.push(row);
}
});

// Afficher les lignes trouvées en haut du tableau, avec leur spacer
if (filter !== '' && foundRows.length > 0) { // On retire toutes les lignes trouvées et leurs spacers du tbody
foundRows.forEach(row => {
const spacer = row.nextElementSibling && row.nextElementSibling.classList.contains('spacer-row') ? row.nextElementSibling : null;
tbody.removeChild(row);
if (spacer) 
tbody.removeChild(spacer);



});
// On insère les résultats trouvés en haut, avec leur spacer
let insertBefore = tbody.firstChild;
foundRows.forEach(row => {
row.style.display = '';
const spacer = document.createElement('tr');
spacer.className = 'spacer-row';
spacer.innerHTML = `<td colspan="6"></td>`;
tbody.insertBefore(spacer, insertBefore);
tbody.insertBefore(row, spacer);
});
} else if (filter === '') { // Si pas de filtre, on restaure l'ordre initial
const tbody = document.getElementById('sportproduct-table').querySelector('tbody');
// Supprime toutes les lignes existantes (hors "Aucune liaison trouvée")
Array.from(tbody.querySelectorAll('tr')).forEach(row => {
if (!row.querySelector('td[colspan]')) 
tbody.removeChild(row);



});
// Réinsère les lignes dans l'ordre initial
originalOrder.forEach(row => tbody.appendChild(row.cloneNode(true)));
}

// Gère le cas "Aucune liaison trouvée"
const noResultRow = table.querySelector('tbody tr td[colspan]');
if (noResultRow) {
const visibleRows = Array.from(tbody.querySelectorAll('tr')).filter(r => r.style.display !== 'none' && !r.querySelector('td[colspan]') && !r.classList.contains('spacer-row'));
noResultRow.parentElement.style.display = visibleRows.length === 0 ? '' : 'none';
}
}

document.getElementById('sportproduct-search-input').addEventListener('input', filterSportproductTable);
document.getElementById('sportproduct-search-btn').addEventListener('click', filterSportproductTable);
	</script>
{% endblock %}
